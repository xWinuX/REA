#version 450

#include "../PixelGridComputeGlobals.glsl"

layout(push_constant) uniform PushConstant {
    uint rigidBodyIndex;
};

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;
void main()
{
    RigidBody rigidBody = rigidBodies[rigidBodyIndex];

    uint rigidBodyWidth = rigidBody.Size.x;
    uint rigidBodyHeight = rigidBody.Size.y;

    if (gl_GlobalInvocationID.x >= rigidBodyWidth * rigidBodyHeight) {
        return;
    }

    Pixel pixel = rigidBodyData[rigidBody.DataIndex + gl_GlobalInvocationID.x];

    if (getRigidBodyID(pixel.RigidBodyID12_RigidBodyIndex20) == rigidBodyIndex)
    {
        vec2 center = vec2(rigidBody.Size/2.0f);
        vec2 rigidBodyBottomLeftCorner = vec2(rigidBody.Position - center);

        float angle = radians(rigidBody.Rotation);
        mat2 rotationMatrix = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));

        uint localX = (gl_GlobalInvocationID.x % rigidBodyWidth);
        uint localY = (gl_GlobalInvocationID.x / rigidBodyWidth);

        vec2 position = rotationMatrix * (vec2(localX, localY) - center);

        int x = int(floor(rigidBodyBottomLeftCorner.x + center.x + position.x)) - int(simulationData.chunkOffset.x * CHUNK_SIZE);
        int y = int(floor(rigidBodyBottomLeftCorner.y + center.y + position.y)) - int(simulationData.chunkOffset.y * CHUNK_SIZE);

        if (x < 0 || x >= NUM_ELEMENTS_X || y < 0 || y >= NUM_ELEMENTS_Y) {
            return;
        }

        SetupPixelVarsByPosition(middleCenter, x, y);

        if (bitsetHas(getFlags(middleCenterPixel.PixelID16_Charge8_Flags8), Solid)) {
            return;
        }

        uint dataIndex = getRigidBodyIndex(pixel.RigidBodyID12_RigidBodyIndex20);
        if (rigidBody.ID == 0)
        {
            pixel.RigidBodyID12_RigidBodyIndex20 = 0;
            rigidBodyData[rigidBody.DataIndex + gl_GlobalInvocationID.x].RigidBodyID12_RigidBodyIndex20 = 0;
        }

        if (getRigidBodyID(middleCenterPixel.RigidBodyID12_RigidBodyIndex20) == 0)
        {
            GetReadPixel(middleCenter) = pixel;
        }

    }
}
