#version 450

#include "../PixelGridComputeGlobals.glsl"
#include "../CCLShared.glsl"

layout(push_constant) uniform PushConstant {
    uint ReadIndex;
    uvec2 Offset;
    uvec2 Size;
};

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;
void main()
{
    if (gl_GlobalInvocationID.x >= Size.x * Size.y) {
        return;
    }

    uint pixelIndex = getGlobalIndex(gl_GlobalInvocationID.x, simulationData.width, Size, uvec2(simulationData.targetPosition) + Offset);
    uint labelIndex = getGlobalIndex(gl_GlobalInvocationID.x, simulationData.simulationWidth, Size, Offset);

    uint flags = getFlags(pixels[pixelIndex].PixelID16_Charge8_Flags8);

    if (bitsetHas(flags, Solid) && bitsetHas(flags, Connected)) {
        labels[labelIndex] = int(gl_GlobalInvocationID.x);
    }
    else {
        labels[labelIndex] = -1;
    }
}
