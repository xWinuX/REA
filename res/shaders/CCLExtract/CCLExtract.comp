#version 450

#include "../PixelGridComputeGlobals.glsl"
#include "../CCLShared.glsl"

layout(push_constant) uniform PushConstant {
    uvec2 Offset;
    uvec2 Size;
    uvec2 SeedPoint;
    uint RigidBodyID;
};

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;
void main()
{
    if (gl_GlobalInvocationID.x >= Size.x * Size.y) {
        return;
    }

    uvec2 offset = Offset-(simulationData.chunkOffset * CHUNK_SIZE);

    uint x = offset.x + (gl_GlobalInvocationID.x % Size.x);
    uint y = offset.y + (gl_GlobalInvocationID.x / Size.x);

    uint labelIndex = getGlobalIndex(gl_GlobalInvocationID.x, NUM_ELEMENTS_X, Size, offset);

    if (labels[labelIndex] != -1)
    {
        SetupWritePixelVarsByPosition(middleCenter, x, y);

        uint localIndex = rigidBodies[RigidBodyID].DataIndex + gl_GlobalInvocationID.x;

        GetWritePixel(middleCenter).RigidBodyID12_RigidBodyIndex20 = RigidBodyID | (localIndex << 12u);
    }
}
