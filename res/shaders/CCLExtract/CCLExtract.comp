#version 450

#include "../PixelGridComputeGlobals.glsl"
#include "../CCLShared.glsl"

layout(push_constant) uniform PushConstant {
    uvec2 Offset;
    uvec2 Size;
    uvec2 SeedPoint;
    uint RigidBodyID;
};

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;
void main()
{
    if (gl_GlobalInvocationID.x >= Size.x * Size.y) {
        return;
    }

    uint correctLabel = labels[SeedPoint.y * simulationData.width + SeedPoint.x];

    uint index = getGlobalIndex(gl_GlobalInvocationID.x, simulationData.width, Size, Offset);

    PixelData pixelData = simulationData.pixelLookup[readOnlyPixels[index].PixelID16_Charge8_Flags8 & 0xFFFFu];

    if (labels[index] == correctLabel)
    {
        Pixel pixel = readOnlyPixels[index];

        uint localIndex = simulationData.rigidBodies[RigidBodyID].DataIndex + gl_GlobalInvocationID.x;

        pixel.RigidBodyID12_RigidBodyIndex20 = RigidBodyID | (localIndex << 12u);

        rigidBodyData[localIndex] = pixel;

        readOnlyPixels[index].PixelID16_Charge8_Flags8 = 0;
        readOnlyPixels[index].RigidBodyID12_RigidBodyIndex20 = 0;
    }
}
