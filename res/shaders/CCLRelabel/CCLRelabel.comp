// Source: https://github.com/ogukei/filum-example/tree/master
// Which uses the method described here: https://www.academia.edu/29842500/

#version 450

#include "../PixelGridComputeGlobals.glsl"
#include "../CCLShared.glsl"

layout(push_constant) uniform PushConstant {
    uvec2 Offset;
    uvec2 Size;
};

int findRoot(uint index) {
    int v = atomicAdd(labels[index], 0);
    if (v < 0) {
        return v;
    }
    int w = int(index);
    while (v != w) {
        w = v;
        v = atomicAdd(labels[v], 0);
    }
    return v;
}

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main() {
    uint id = gl_GlobalInvocationID.x;

    uint index = getGlobalIndex(gl_GlobalInvocationID.x, NUM_ELEMENTS_X, Size, Offset);

    int v = findRoot(index);
    if (v >= 0) {
        atomicExchange(labels[index], v);
    }
}